/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.stereokitbindings;

public class matrix {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected matrix(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(matrix obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(matrix obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        StereoKitJNI.delete_matrix(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setRow(vec4 value) {
    StereoKitJNI.matrix_row_set(swigCPtr, this, vec4.getCPtr(value), value);
  }

  public vec4 getRow() {
    long cPtr = StereoKitJNI.matrix_row_get(swigCPtr, this);
    return (cPtr == 0) ? null : new vec4(cPtr, false);
  }

  public void setM(SWIGTYPE_p_float value) {
    StereoKitJNI.matrix_m_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  public SWIGTYPE_p_float getM() {
    long cPtr = StereoKitJNI.matrix_m_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public matrix(float m00, float m01, float m02, float m03, float m10, float m11, float m12, float m13, float m20, float m21, float m22, float m23, float m30, float m31, float m32, float m33) {
    this(StereoKitJNI.new_matrix(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33), true);
  }

}
